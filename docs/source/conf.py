# -*- coding: utf-8 -*-
import os
import re
from datetime import datetime

# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

# -- Project information -----------------------------------------------------

# language = 'en'
language = 'zh_CN'

project = 'Sphinx和reStructureText手册'
slug = re.sub(r'\W+', '-', project.lower())
currentYear = datetime.now().year

if language == 'zh_CN':
    author = u'奕行智能科技有限公司'
else:
    author = u'EVAS Intelligence Co., Ltd'

copyright = '2022-' + str(currentYear) + ', ' + author

# The full version, including alpha/beta/rc tags
release = 'V1.0'
version = release

# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'recommonmark',
    'sphinx_markdown_tables',
    # Auto-generate section labels.
    'sphinx.ext.autosectionlabel',
    'sphinx_rtd_theme'
]

# Linking to headings in other files (https://github.com/readthedocs/recommonmark#linking-to-headings-in-other-files)
# Prefix document path to section labels, otherwise autogenerated labels would look like 'heading'
# rather than 'path/to/file:heading'
autosectionlabel_prefix_document = True

source_suffix = {
    '.rst': 'restructuredtext',
    '.md': 'markdown',
    '.txt': 'markdown',
}

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

master_doc = 'index'

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#

html_theme = 'sphinx_rtd_theme'
# Set link name generated in the top bar.
html_title = project
# Specify a base_url used to generate sitemap.xml. If not
# specified, then no sitemap will be built.
# base_url = 'https://cocoyi.online/'

html_theme_options = {
    'logo_only': False,
    'display_version': True,
    'prev_next_buttons_location': 'bottom',
    'style_external_links': False,
    'vcs_pageview_mode': '',
    'style_nav_header_background': '#2980B9',
    # Toc options
    'collapse_navigation': False,
    'sticky_navigation': False,
    'navigation_depth': 4,
    'includehidden': True,
    'titles_only': False
}

html_show_sourcelink = False
# html_show_sphinx = False

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

html_favicon = "./_static/favicon.ico"

html_js_files = ['debug.js']

html_css_files = ['style.css']

# Use custom CSS configs
templates_path = ['_templates']


# -- Options for LaTeX output ---------------------------------------------


# The name of an image file (relative to this directory) to place at the bottom of
# the title page.
latex_logo = os.path.join('_static', 'evas-logo.pdf')
latex_engine = 'xelatex'
latex_use_xindy = False

preamble = ''
with open(os.path.join('../latex', 'preamble.tex')) as f:
    preamble = f.read()

titlepage = ''
with open(os.path.join('../latex', 'titlepage.tex')) as f:
    titlepage = f.read()

latex_elements = {
    'latex_engine': 'xelatex',
    
    'papersize': 'a4paper',

    'geometry': '\\usepackage[left=2cm,right=2cm,top=2cm,bottom=2cm]{geometry}',

    # Latex figure (float) alignment
    'figure_align': 'htbp',

    'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    'fncychap': '\\usepackage[Sonny]{fncychap}',

    'preamble': preamble,

    'maketitle': titlepage,

    'title': project,

    'author': author,

    'release': release,

    'releasename': release,
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
  (master_doc, '{0}.tex'.format(html_title), project, author, 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#
# latex_logo = None

# If true, show page references after internal links.
#
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
#
# latex_show_urls = False

# Documents to append as an appendix to all manuals.
#
# latex_appendices = []

# If false, no module index is generated.
#
# latex_domain_indices = True




# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'sphinx manual', project,
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'sphinx manual', project,
     author, 'sphinx_manual', project,
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']



def setup(app):
    # The name of an image file (relative to this directory) to place at the top
    # of the sidebar.
    app.config.html_logo = os.path.join('_static', 'evas-logo.svg')
